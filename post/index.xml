<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Xiangwen Mo</title>
    <link>https://xiangwenmo.github.io/post/</link>
    <description>Recent content in Projects on Xiangwen Mo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://xiangwenmo.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Project 5: Use Star Wars API to request Data about SW characters</title>
      <link>https://xiangwenmo.github.io/post/proj-5/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiangwenmo.github.io/post/proj-5/</guid>
      <description>Overview This is the fifth project for BIOSTAT 823 (2020 Fall)
This project requires to use the requests library, download all the people in the Star Wars universe using the Star Wars API. Need to show the name of the oldest character and the titles of films he appears in.
Check API documentation Before request data, we first need to know the patterns of the urls and how to extract the desired information.</description>
    </item>
    
    <item>
      <title>Project 4: Convert spotify dataframe to 3NF and create SQL schema</title>
      <link>https://xiangwenmo.github.io/post/proj-4/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiangwenmo.github.io/post/proj-4/</guid>
      <description>Overview This is the fourth project for BIOSTAT 823 (2020 Fall)
This project requires to Create a SQLite3 schema to store spotify data in at least 3rd normal form (3NF) and use an SQL query to find the names of all playlists that contain instrumentals
I used python to do the normalization and stored the transformed dataframe into a SQL database. I&amp;rsquo;ll show how I do it in the following sections:</description>
    </item>
    
    <item>
      <title>Project 3: Visualization about Malaria</title>
      <link>https://xiangwenmo.github.io/post/proj-3/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiangwenmo.github.io/post/proj-3/</guid>
      <description>Overview This is the third project for BIOSTAT 823 (2020 Fall)
This project requires to include 3 informative visualizations about malaria using Python and Malaria Dataset from github.
The detailed solution and codes are in here.
Graph 1: Malaria death by age I used dataset malaria_deaths_age.csv to plot the graph.
  From the graph we can see that young children are more vulnerable to the malaria disease. Especially for under 5 age group, which takes nearly half of the total deaths.</description>
    </item>
    
    <item>
      <title>Project 2: Euler&#39;s projects</title>
      <link>https://xiangwenmo.github.io/post/proj-2/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xiangwenmo.github.io/post/proj-2/</guid>
      <description>Overview This is the second project for BIOSTAT 823 (2020 Fall)
This project requires to solve three problems from Euler&amp;rsquo;s Project. I choose my two of the problems related to decimals, and one related to prime numbers.
The detailed solution and codes are in here. I will explain my solutions to each of the problems in the following sections:
Problem 7: 10001st prime (420,695) Problem: By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.</description>
    </item>
    
    <item>
      <title>Project 1: Build my personal website</title>
      <link>https://xiangwenmo.github.io/post/proj-1/</link>
      <pubDate>Tue, 25 Aug 2020 10:58:08 -0400</pubDate>
      
      <guid>https://xiangwenmo.github.io/post/proj-1/</guid>
      <description>Overview This is the first project for BIOSTAT 823 (2020 Fall)
This project requires to build a personal website. I build this website with Github Pages and Hugo, that allow to host a personal webpage without bothering about finding a domain name and have variety of personalized themes to choose from. I will discuss more details on how I create this website in following sections.
The github repo is here</description>
    </item>
    
  </channel>
</rss>